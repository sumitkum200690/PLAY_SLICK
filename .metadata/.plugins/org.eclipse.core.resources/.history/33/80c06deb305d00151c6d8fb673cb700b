package models.database

import scala.slick.direct.AnnotationMapper.column
import scala.slick.driver.JdbcModelComponent.ModelBuilder.Table
import scala.slick.lifted.Tag
import scala.slick.driver.JdbcModelComponent.ModelBuilder.Table
import scala.slick.driver.JdbcModelComponent.ModelBuilder.Table
import scala.slick.driver.JdbcModelComponent.ModelBuilder.Table

/*
case class Employee(id: Option[Long], name: String, dept_id: Long, manager_id: Long, isManager: Boolean)

class Employees(tag: Tag) extends Table[Employee](tag, "EMPLOYEE") {
  
  def id = column[Long]("id", O.PrimaryKey, O.AutoInc)
  def name = column[String]("name")
  def dept_id = column[Long]("dept_id")
  def manager_id = column[Long]("manager_id")
  def isManager = column[Boolean]("isManager")
  
} 
*/



class Employee(tag: Tag) extends Table[(Int, String, String)](tag, "EMPLOYEE") {
  
  def id = column[Int]("SUP_ID", O.PrimaryKey) // This is the primary key column
  def name = column[String]("SUP_NAME")
  def street = column[String]("STREET")
  
  // Every table needs a * projection with the same type as the table's type parameter
  def * = (id, name, street, city, state, zip)
}
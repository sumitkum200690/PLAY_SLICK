package models.database

import scala.slick.model.Table
import scala.slick.direct.AnnotationMapper.column
import scala.slick.model.Column

case class Employee(id: Option[Long], name: String, dept_id: Long, manager_id: Long, isManager: Boolean)
 
class Employees(tag: Tag) extends Table[Employee](tag, "EMPLOYEE") {
 
 implicit val dateColumnType = MappedColumnType.base[Date, Long](d => d.getTime, d => new Date(d))
 
 def id = column[Long]("id", O.PrimaryKey, O.AutoInc)
 def name = column[String]("name")
 def address = column[String]("address")
 def dob = column[Date]("date_of_birth")
 def joiningDate = column[Date]("joining_date")
 def designation = column[String]("designation")
 
 def * = (id.?, name, address, dob.?, joiningDate, designation.?) <> (Employee.tupled, Employee.unapply _)